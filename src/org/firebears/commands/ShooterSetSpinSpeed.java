// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.firebears.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.firebears.Robot;
import org.firebears.subsystems.Lights;

/**
 *
 */
public class ShooterSetSpinSpeed extends Command {

    double goalSpeed = 1.0;

    public ShooterSetSpinSpeed(double speed) {
        goalSpeed = speed;
    }

    public ShooterSetSpinSpeed() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooter);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time

    protected void initialize() {
        Robot.shooter.setSpeed(goalSpeed);
        if (goalSpeed > 0.8) {
            Robot.lights.lightProgram(Lights.SHOOTER_WINDUP);
            setTimeout(2.5);
        } else {
            setTimeout(0.1);
        }

    }
    // Called repeatedly when this Command is scheduled to run

    protected void execute() {
    }
    // Make this return true when this Command no longer needs to run execute()

    protected boolean isFinished() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED
        // return Robot.shooter.onTarget();
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED
        return isTimedOut();
    }
    // Called once after isFinished returns true

    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run

    protected void interrupted() {
    }
}
